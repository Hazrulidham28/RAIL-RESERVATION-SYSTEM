/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package assignmentlatest;
import java.io.*;
import java.util.*;
import javax.swing.table.*;
import javax.swing.*;
import java.security.*;

/**
 *
 * @author Muhdsaif
 */
public class CashierPage extends javax.swing.JFrame {
    private static class Quan extends JComboBox
    {
        Quan()
        {
            addItem(1);
            addItem(2);
            addItem(3);
            addItem(4);
            addItem(5);
            addItem(6);
            addItem(7);
            addItem(8);
            addItem(9);
            addItem(10);
        }
    }

    /** Creates new form CashierPage */
    public CashierPage() {
        initComponents();
        populateTable(); 
        this .setLocationRelativeTo(null);
    }
    class Receipt
    {
        private String items;
        private int quantity;
        private double price;

        public Receipt(String items, int quantity, double price) {
            this.items = items;
            this.quantity = quantity;
            this.price = price;
        }

        public String getItem() {
            return items;
        }

        public void setItem(String items) {
            this.items = items;
        }

        public int getQuan() {
            return quantity;
        }

        public void setQuan(int quantity) {
            this.quantity = quantity;
        }

        public double getPrice() {
            return price;
        }

        public void setPrice(double price) {
            this.price = price;
        }

        @Override
        public String toString() {
            return ("\n"+items + "\t" + quantity + "\t" + price);
        }
        
    }

    public void populateTable()
    {
            
        File file = new File("Coffee.txt");
        try
        {
            BufferedReader br = new BufferedReader(new FileReader(file));
            String firstLine = br.readLine().trim();
            String[] columnName = firstLine.split(",");
            DefaultTableModel model = (DefaultTableModel)tableItem.getModel();
            model.setColumnIdentifiers(columnName);
           
            Object[] tableLines = br.lines().toArray();
                
            for(int i = 0; i<tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(";");
                model.addRow(dataRow);
            }
                
        }
        catch(IOException e)
        {
            System.out.println(e.toString());
        }
        catch(NumberFormatException e)
        {
            System.out.println(e.toString());
        }
        catch(Exception e)
        {
            System.out.print(e.toString());
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton5 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCart = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        bAddCart = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableItem = new javax.swing.JTable();
        bCalculate = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        totalPayment = new javax.swing.JTextField();
        bPay = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        bGenerate = new javax.swing.JButton();
        bPrint = new javax.swing.JButton();
        bReset = new javax.swing.JButton();
        custPay = new javax.swing.JTextField();
        balance = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        priceB = new javax.swing.JButton();

        jButton5.setText("GENERATE RECEIPT");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cashier Page");

        jLabel7.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel7.setText("CASHIER PAGE");
        jLabel7.setToolTipText("");

        tableCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Coffee Code", "Coffee Name", "Price Per Unit", "Quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableCart);

        jLabel1.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel1.setText("COFFEE LIST");

        bAddCart.setText("ADD TO CART");
        bAddCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddCartActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel2.setText("CART");

        tableItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tableItem);

        bCalculate.setText("CALCULATE");
        bCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCalculateActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel3.setText("PAYMENT");

        jLabel4.setText("Total Payment : ");

        jLabel5.setText("Customer Pay :");

        jLabel6.setText("Balance :");

        totalPayment.setEditable(false);
        totalPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalPaymentActionPerformed(evt);
            }
        });

        bPay.setText("PAY");
        bPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPayActionPerformed(evt);
            }
        });

        area.setColumns(20);
        area.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        area.setRows(5);
        jScrollPane3.setViewportView(area);

        jLabel8.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel8.setText("RECEIPT");

        bGenerate.setText("GENERATE RECEIPT");
        bGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGenerateActionPerformed(evt);
            }
        });

        bPrint.setText("PRINT RECEIPT");
        bPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPrintActionPerformed(evt);
            }
        });

        bReset.setText("RESET");
        bReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bResetActionPerformed(evt);
            }
        });

        custPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custPayActionPerformed(evt);
            }
        });

        balance.setEditable(false);
        balance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                balanceActionPerformed(evt);
            }
        });

        jLabel9.setText("RM");

        jLabel10.setText("RM");

        jLabel11.setText("RM");

        priceB.setText("PRICE");
        priceB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2)
                                    .addComponent(jScrollPane2)
                                    .addComponent(jScrollPane1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(bCalculate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bAddCart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(priceB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel10))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(balance, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(custPay, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(bPay)
                                            .addComponent(totalPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(383, 383, 383)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel6)))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bGenerate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bPrint)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bReset)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel7)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel8))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel6))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(bReset)
                                .addComponent(bPrint)
                                .addComponent(bGenerate))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(314, 314, 314)
                        .addComponent(bPay)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(balance, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bAddCart))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(priceB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bCalculate)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel4))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(totalPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9)))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel5))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(custPay, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10)))))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bAddCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddCartActionPerformed
        
        TableModel model1 = tableItem.getModel();
        int[] indexs = tableItem.getSelectedRows();
        Object[] row = new Object[3];
        DefaultTableModel model2 = (DefaultTableModel)tableCart.getModel();
        
        int inStock;
        for(int i=0; i <indexs.length; i++)
        {
            inStock = Integer.parseInt(tableItem.getValueAt(i, 3).toString());
            if(inStock < 1)
            {
                JOptionPane.showMessageDialog(null,"Item not available");
            }
            else
            {
                row[0] = model1.getValueAt(indexs[i],0);
                row[1] = model1.getValueAt(indexs[i],1);
                row[2] = model1.getValueAt(indexs[i],2);
                model2.addRow(row);
                TableColumn quantityColumn = tableCart.getColumnModel().getColumn(3);
                quantityColumn.setCellEditor(new DefaultCellEditor(new Quan()));
                
            }
        }
    }//GEN-LAST:event_bAddCartActionPerformed

    private void bCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCalculateActionPerformed
       double sum = 0;
           for(int i = 0; i < tableCart.getRowCount(); i++)
           {
               sum = sum + Double.parseDouble(tableCart.getValueAt(i, 4).toString());
           }
       totalPayment.setText(Double.toString(sum));
    }//GEN-LAST:event_bCalculateActionPerformed

    private void totalPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalPaymentActionPerformed

    }//GEN-LAST:event_totalPaymentActionPerformed

    private void bGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGenerateActionPerformed
       SecureRandom random = new SecureRandom();
       int num = random.nextInt(100000);
       String formatted = String.format("%05d", num); 
       
       TableModel model2 = tableCart.getModel();
       int indexs = tableCart.getRowCount();
       Object[] row = new Object[3];
       int n;
       n = indexs;
       Receipt r[] = new Receipt[n];
       
       String item;
       int quant;
       double cost;
       
       for(int i=0; i<indexs; i++)
       {
           item = model2.getValueAt(i,1).toString();
           quant= Integer.parseInt(model2.getValueAt(i, 3).toString());
           cost = Double.parseDouble(model2.getValueAt(i,4).toString());
           
           r[i] = new Receipt(item,quant,cost);
       }
      
       double tot = Double.parseDouble(totalPayment.getText());
       double cust_pay = Double.parseDouble(custPay.getText());
       double bal = Double.parseDouble(balance.getText());
               
       area.setText("==========================================\n");
       area.setText(area.getText()+"\t              RECEIPT\n");
       area.setText(area.getText()+"==========================================\n");
             
       Date obj = new Date();
       
       String date = obj.toString();
       int no_receipt = Integer.parseInt(formatted);
       
       area.setText(area.getText()+"Date : "+date+"\n");
       area.setText(area.getText()+"No Receipt : "+no_receipt);
       area.setText(area.getText()+"\n\nItems\tQuantity\tPrice");
       area.setText(area.getText()+"\n--------\t------------\t-------");
       
       for(int i=0; i<indexs; i++)
       {
       area.setText(area.getText()+r[i].toString());
       }
       
       area.setText(area.getText()+"\n__________________________________________");
       area.setText(area.getText()+"\nTotal Price\t: RM "+tot);
       area.setText(area.getText()+"\nPayment\t: RM "+cust_pay);
       area.setText(area.getText()+"\nBalance\t: RM "+bal);
       area.setText(area.getText()+"\n\n\t    Thank You for Coming");
       area.setText(area.getText()+"\n\n==========================================");
       
       try 
        {
            File file = new File("Transaction.txt");
            FileWriter fw = new FileWriter(file,true);
            PrintWriter out =  new PrintWriter(fw);
            out.print("\n============================================\n");
            out.print("\t\t\tRECEIPT\n");
            out.print("============================================\n");
            out.print("Date : "+date+"\n");
            out.print("No Receipt : "+no_receipt);
            out.print("\n\nItems\t\t\tQuantity\t\tPrice");
            out.print("\n-----\t\t\t--------\t\t-----");
            for(int i=0; i<indexs; i++)
            {
                out.print("\n"+r[i].getItem()+"\t\t\t"+r[i].getQuan()+"\t\t\t"+r[i].getPrice());
            }
            out.print("\n____________________________________________");
            out.printf("\nTotal Price\t: RM %.2f",tot);
            out.printf("\nPayment\t: RM %.2f",cust_pay);
            out.printf("\nBalance\t: RM %.2f",bal);
            out.print("\n\n\t\tThank You for Coming");
            out.print("\n\n============================================");
            
            out.close();
        }
        catch(IOException e)
        {
            System.out.println(e.toString());
        }
        catch(NumberFormatException e)
        {
            System.out.println(e.toString());
        }
        catch(Exception e)
        {
            System.out.print(e.toString());
        }
    }//GEN-LAST:event_bGenerateActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void bPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPrintActionPerformed
        try
        {
            area.print();
        }
        catch(Exception e)
        {
            
        }
    }//GEN-LAST:event_bPrintActionPerformed

    private void bResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bResetActionPerformed
        DefaultTableModel model2 = (DefaultTableModel) tableCart.getModel();
        area.setText("");
        totalPayment.setText("");
        custPay.setText("");
        balance.setText("");
        model2.setRowCount(0);
    }//GEN-LAST:event_bResetActionPerformed

    private void custPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custPayActionPerformed
        
    }//GEN-LAST:event_custPayActionPerformed

    private void balanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_balanceActionPerformed
        
    }//GEN-LAST:event_balanceActionPerformed

    private void bPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPayActionPerformed
        double cust_pay = Double.parseDouble(custPay.getText());
        double remainder = 0;
        double total = Double.parseDouble(totalPayment.getText());
        
        if(custPay.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Fill the Customer Payment");
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Payment Successful");
            remainder = cust_pay - total;
        }
        balance.setText(Double.toString(remainder));
    }//GEN-LAST:event_bPayActionPerformed

    private void priceBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceBActionPerformed
       double numrow = tableCart.getRowCount();
       double total;
       
       for(int i=0; i<numrow; i++)
       {
           double coffeePrice = Double.valueOf(tableCart.getValueAt(i, 2).toString());
           int quantity = Integer.valueOf(tableCart.getValueAt(i, 3).toString());
           
           total = coffeePrice*quantity;
           tableCart.setValueAt(total,i,4);
       }
       
    }//GEN-LAST:event_priceBActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CashierPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CashierPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CashierPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CashierPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CashierPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea area;
    private javax.swing.JButton bAddCart;
    private javax.swing.JButton bCalculate;
    private javax.swing.JButton bGenerate;
    private javax.swing.JButton bPay;
    private javax.swing.JButton bPrint;
    private javax.swing.JButton bReset;
    private javax.swing.JTextField balance;
    private javax.swing.JTextField custPay;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton priceB;
    private javax.swing.JTable tableCart;
    private javax.swing.JTable tableItem;
    private javax.swing.JTextField totalPayment;
    // End of variables declaration//GEN-END:variables

}
